/***************************************************************************
 *
 * Copyright (c) 2010-2015 Petri Purho, Dennis Belfrage, Olli Harjola
 *
 * This software is provided 'as-is', without any express or implied
 * warranty.  In no event will the authors be held liable for any damages
 * arising from the use of this software.
 * Permission is granted to anyone to use this software for any purpose,
 * including commercial applications, and to alter it and redistribute it
 * freely, subject to the following restrictions:
 * 1. The origin of this software must not be misrepresented; you must not
 *    claim that you wrote the original software. If you use this softwareporo::Key_
 *    in a product, an acknowledgment in the product documentation would be
 *    appreciated but is not required.
 * 2. Altered source versions must be plainly marked as such, and must not be
 *    misrepresented as being the original software.
 * 3. This notice may not be removed or altered from any source distribution.
 *
 ***************************************************************************/

#ifndef INC_KEYBOARD_H
#define INC_KEYBOARD_H

#include <vector>
#include "poro_types.h"
#include "ikeyboard_listener.h"


namespace poro {

class Keyboard
{
public:
	Keyboard();
	~Keyboard() { }

	void AddKeyboardListener(IKeyboardListener* listener);
	void RemoveKeyboardListener(IKeyboardListener* listener);

	void OnFrameStart( int frame_num );

	void FireKeyDownEvent(int button, types::charset unicode);
	void FireKeyUpEvent(int button, types::charset unicode);
	void FireTextInputEvent( const char* text );

	bool IsKeyDown(int button) const;
	bool IsKeyJustDown(int button) const;
	bool IsKeyJustUp(int button) const;

	bool IsShiftDown() const;
	bool IsAltDown() const;
	bool IsCtrlDown() const;

	const std::string* GetTextInput();

	void SetDisableRepeats(bool disable_repeats);

	void SetTextInputEnabled();

	int GetLastFrameActive() const;

private:
	void SetKeyDown(int button, bool down);

	std::vector< IKeyboardListener* > mListeners;

	std::vector< bool > mKeysDown;
	std::vector< bool > mKeysJustDown;
	std::vector< bool > mKeysJustUp;
	std::string mTextInput;

	bool mDisableRepeats;
	int mCurrentFrameNum;
	int mLastFrameActive;
};

//-----------------------------------------------------------------------------

inline void Keyboard::SetDisableRepeats(bool disable_repeats) {
	mDisableRepeats = disable_repeats;
}

} // end of namespace poro

//-----------------------------------------------------------------------------


#include <SDL_scancode.h>

namespace poro {
	
	enum
	{
			
		Key_UNKNOWN = 0,

		Key_a = SDL_SCANCODE_A,
		Key_b = SDL_SCANCODE_B,
		Key_c = SDL_SCANCODE_C,
		Key_d = SDL_SCANCODE_D,
		Key_e = SDL_SCANCODE_E,
		Key_f = SDL_SCANCODE_F,
		Key_g = SDL_SCANCODE_G,
		Key_h = SDL_SCANCODE_H,
		Key_i = SDL_SCANCODE_I,
		Key_j = SDL_SCANCODE_J,
		Key_k = SDL_SCANCODE_K,
		Key_l = SDL_SCANCODE_L,
		Key_m = SDL_SCANCODE_M,
		Key_n = SDL_SCANCODE_N,
		Key_o = SDL_SCANCODE_O,
		Key_p = SDL_SCANCODE_P,
		Key_q = SDL_SCANCODE_Q,
		Key_r = SDL_SCANCODE_R,
		Key_s = SDL_SCANCODE_S,
		Key_t = SDL_SCANCODE_T,
		Key_u = SDL_SCANCODE_U,
		Key_v = SDL_SCANCODE_V,
		Key_w = SDL_SCANCODE_W,
		Key_x = SDL_SCANCODE_X,
		Key_y = SDL_SCANCODE_Y,
		Key_z = SDL_SCANCODE_Z,

		Key_1 = SDL_SCANCODE_1,
		Key_2 = SDL_SCANCODE_2,
		Key_3 = SDL_SCANCODE_3,
		Key_4 = SDL_SCANCODE_4,
		Key_5 = SDL_SCANCODE_5,
		Key_6 = SDL_SCANCODE_6,
		Key_7 = SDL_SCANCODE_7,
		Key_8 = SDL_SCANCODE_8,
		Key_9 = SDL_SCANCODE_9,
		Key_0 = SDL_SCANCODE_0,

		Key_RETURN = SDL_SCANCODE_RETURN ,
		Key_ESCAPE = SDL_SCANCODE_ESCAPE ,
		Key_BACKSPACE = SDL_SCANCODE_BACKSPACE ,
		Key_TAB = SDL_SCANCODE_TAB ,
		Key_SPACE = SDL_SCANCODE_SPACE ,

		Key_MINUS = SDL_SCANCODE_MINUS,
		Key_EQUALS = SDL_SCANCODE_EQUALS,
		Key_LEFTBRACKET = SDL_SCANCODE_LEFTBRACKET,
		Key_RIGHTBRACKET = SDL_SCANCODE_RIGHTBRACKET,
		Key_BACKSLASH = SDL_SCANCODE_BACKSLASH,


		Key_NONUSHASH = SDL_SCANCODE_NONUSHASH,
		Key_SEMICOLON = SDL_SCANCODE_SEMICOLON,
		Key_APOSTROPHE = SDL_SCANCODE_APOSTROPHE,
		Key_GRAVE = SDL_SCANCODE_GRAVE,
		Key_COMMA = SDL_SCANCODE_COMMA,
		Key_PERIOD = SDL_SCANCODE_PERIOD,
		Key_SLASH = SDL_SCANCODE_SLASH,
		Key_CAPSLOCK = SDL_SCANCODE_CAPSLOCK,
		Key_F1 = SDL_SCANCODE_F1,
		Key_F2 = SDL_SCANCODE_F2,
		Key_F3 = SDL_SCANCODE_F3,
		Key_F4 = SDL_SCANCODE_F4,
		Key_F5 = SDL_SCANCODE_F5,
		Key_F6 = SDL_SCANCODE_F6,
		Key_F7 = SDL_SCANCODE_F7,
		Key_F8 = SDL_SCANCODE_F8,
		Key_F9 = SDL_SCANCODE_F9,
		Key_F10 = SDL_SCANCODE_F10,
		Key_F11 = SDL_SCANCODE_F11,
		Key_F12 = SDL_SCANCODE_F12,
		Key_PRINTSCREEN = SDL_SCANCODE_PRINTSCREEN,
		Key_SCROLLLOCK = SDL_SCANCODE_SCROLLLOCK,
		Key_PAUSE = SDL_SCANCODE_PAUSE,
		Key_INSERT = SDL_SCANCODE_INSERT,
		Key_HOME = SDL_SCANCODE_HOME,
		Key_PAGEUP = SDL_SCANCODE_PAGEUP,
		Key_DELETE = SDL_SCANCODE_DELETE,
		Key_END = SDL_SCANCODE_END,
		Key_PAGEDOWN = SDL_SCANCODE_PAGEDOWN,
		Key_RIGHT = SDL_SCANCODE_RIGHT,
		Key_LEFT = SDL_SCANCODE_LEFT,
		Key_DOWN = SDL_SCANCODE_DOWN,
		Key_UP = SDL_SCANCODE_UP,
		Key_NUMLOCKCLEAR = SDL_SCANCODE_NUMLOCKCLEAR,
		Key_KP_DIVIDE = SDL_SCANCODE_KP_DIVIDE,
		Key_KP_MULTIPLY = SDL_SCANCODE_KP_MULTIPLY,
		Key_KP_MINUS = SDL_SCANCODE_KP_MINUS,
		Key_KP_PLUS = SDL_SCANCODE_KP_PLUS,
		Key_KP_ENTER = SDL_SCANCODE_KP_ENTER,
		Key_KP_1 = SDL_SCANCODE_KP_1,
		Key_KP_2 = SDL_SCANCODE_KP_2,
		Key_KP_3 = SDL_SCANCODE_KP_3,
		Key_KP_4 = SDL_SCANCODE_KP_4,
		Key_KP_5 = SDL_SCANCODE_KP_5,
		Key_KP_6 = SDL_SCANCODE_KP_6,
		Key_KP_7 = SDL_SCANCODE_KP_7,
		Key_KP_8 = SDL_SCANCODE_KP_8,
		Key_KP_9 = SDL_SCANCODE_KP_9,
		Key_KP_0 = SDL_SCANCODE_KP_0,
		Key_KP_PERIOD = SDL_SCANCODE_KP_PERIOD,
		Key_NONUSBACKSLASH = SDL_SCANCODE_NONUSBACKSLASH,
		Key_APPLICATION = SDL_SCANCODE_APPLICATION,
		Key_POWER = SDL_SCANCODE_POWER,
		Key_KP_EQUALS = SDL_SCANCODE_KP_EQUALS,
		Key_F13 = SDL_SCANCODE_F13,
		Key_F14 = SDL_SCANCODE_F14,
		Key_F15 = SDL_SCANCODE_F15,
		Key_F16 = SDL_SCANCODE_F16,
		Key_F17 = SDL_SCANCODE_F17,
		Key_F18 = SDL_SCANCODE_F18,
		Key_F19 = SDL_SCANCODE_F19,
		Key_F20 = SDL_SCANCODE_F20,
		Key_F21 = SDL_SCANCODE_F21,
		Key_F22 = SDL_SCANCODE_F22,
		Key_F23 = SDL_SCANCODE_F23,
		Key_F24 = SDL_SCANCODE_F24,
		Key_EXECUTE = SDL_SCANCODE_EXECUTE,
		Key_HELP = SDL_SCANCODE_HELP,
		Key_MENU = SDL_SCANCODE_MENU,
		Key_SELECT = SDL_SCANCODE_SELECT,
		Key_STOP = SDL_SCANCODE_STOP,
		Key_AGAIN = SDL_SCANCODE_AGAIN,
		Key_UNDO = SDL_SCANCODE_UNDO,
		Key_CUT = SDL_SCANCODE_CUT,
		Key_COPY = SDL_SCANCODE_COPY,
		Key_PASTE = SDL_SCANCODE_PASTE,
		Key_FIND = SDL_SCANCODE_FIND,
		Key_MUTE = SDL_SCANCODE_MUTE,
		Key_VOLUMEUP = SDL_SCANCODE_VOLUMEUP,
		Key_VOLUMEDOWN = SDL_SCANCODE_VOLUMEDOWN,
		Key_KP_COMMA = SDL_SCANCODE_KP_COMMA,
		Key_KP_EQUALSAS400 = SDL_SCANCODE_KP_EQUALSAS400,
		Key_INTERNATIONAL1 = SDL_SCANCODE_INTERNATIONAL1,
		Key_INTERNATIONAL2 = SDL_SCANCODE_INTERNATIONAL2,
		Key_INTERNATIONAL3 = SDL_SCANCODE_INTERNATIONAL3,
		Key_INTERNATIONAL4 = SDL_SCANCODE_INTERNATIONAL4,
		Key_INTERNATIONAL5 = SDL_SCANCODE_INTERNATIONAL5,
		Key_INTERNATIONAL6 = SDL_SCANCODE_INTERNATIONAL6,
		Key_INTERNATIONAL7 = SDL_SCANCODE_INTERNATIONAL7,
		Key_INTERNATIONAL8 = SDL_SCANCODE_INTERNATIONAL8,
		Key_INTERNATIONAL9 = SDL_SCANCODE_INTERNATIONAL9,
		Key_LANG1 = SDL_SCANCODE_LANG1,
		Key_LANG2 = SDL_SCANCODE_LANG2,
		Key_LANG3 = SDL_SCANCODE_LANG3,
		Key_LANG4 = SDL_SCANCODE_LANG4,
		Key_LANG5 = SDL_SCANCODE_LANG5,
		Key_LANG6 = SDL_SCANCODE_LANG6,
		Key_LANG7 = SDL_SCANCODE_LANG7,
		Key_LANG8 = SDL_SCANCODE_LANG8,
		Key_LANG9 = SDL_SCANCODE_LANG9,
		Key_ALTERASE = SDL_SCANCODE_ALTERASE,
		Key_SYSREQ = SDL_SCANCODE_SYSREQ,
		Key_CANCEL = SDL_SCANCODE_CANCEL,
		Key_CLEAR = SDL_SCANCODE_CLEAR,
		Key_PRIOR = SDL_SCANCODE_PRIOR,
		Key_RETURN2 = SDL_SCANCODE_RETURN2,
		Key_SEPARATOR = SDL_SCANCODE_SEPARATOR,
		Key_OUT = SDL_SCANCODE_OUT,
		Key_OPER = SDL_SCANCODE_OPER,
		Key_CLEARAGAIN = SDL_SCANCODE_CLEARAGAIN,
		Key_CRSEL = SDL_SCANCODE_CRSEL,
		Key_EXSEL = SDL_SCANCODE_EXSEL,
		Key_KP_00 = SDL_SCANCODE_KP_00,
		Key_KP_000 = SDL_SCANCODE_KP_000,
		Key_THOUSANDSSEPARATOR = SDL_SCANCODE_THOUSANDSSEPARATOR,
		Key_DECIMALSEPARATOR = SDL_SCANCODE_DECIMALSEPARATOR,
		Key_CURRENCYUNIT = SDL_SCANCODE_CURRENCYUNIT,
		Key_CURRENCYSUBUNIT = SDL_SCANCODE_CURRENCYSUBUNIT,
		Key_KP_LEFTPAREN = SDL_SCANCODE_KP_LEFTPAREN,
		Key_KP_RIGHTPAREN = SDL_SCANCODE_KP_RIGHTPAREN,
		Key_KP_LEFTBRACE = SDL_SCANCODE_KP_LEFTBRACE,
		Key_KP_RIGHTBRACE = SDL_SCANCODE_KP_RIGHTBRACE,
		Key_KP_TAB = SDL_SCANCODE_KP_TAB,
		Key_KP_BACKSPACE = SDL_SCANCODE_KP_BACKSPACE,
		Key_KP_A = SDL_SCANCODE_KP_A,
		Key_KP_B = SDL_SCANCODE_KP_B,
		Key_KP_C = SDL_SCANCODE_KP_C,
		Key_KP_D = SDL_SCANCODE_KP_D,
		Key_KP_E = SDL_SCANCODE_KP_E,
		Key_KP_F = SDL_SCANCODE_KP_F,
		Key_KP_XOR = SDL_SCANCODE_KP_XOR,
		Key_KP_POWER = SDL_SCANCODE_KP_POWER,
		Key_KP_PERCENT = SDL_SCANCODE_KP_PERCENT,
		Key_KP_LESS = SDL_SCANCODE_KP_LESS,
		Key_KP_GREATER = SDL_SCANCODE_KP_GREATER,
		Key_KP_AMPERSAND = SDL_SCANCODE_KP_AMPERSAND,
		Key_KP_DBLAMPERSAND = SDL_SCANCODE_KP_DBLAMPERSAND,
		Key_KP_VERTICALBAR = SDL_SCANCODE_KP_VERTICALBAR,
		Key_KP_DBLVERTICALBAR = SDL_SCANCODE_KP_DBLVERTICALBAR,
		Key_KP_COLON = SDL_SCANCODE_KP_COLON,
		Key_KP_HASH = SDL_SCANCODE_KP_HASH,
		Key_KP_SPACE = SDL_SCANCODE_KP_SPACE,
		Key_KP_AT = SDL_SCANCODE_KP_AT,
		Key_KP_EXCLAM = SDL_SCANCODE_KP_EXCLAM,
		Key_KP_MEMSTORE = SDL_SCANCODE_KP_MEMSTORE,
		Key_KP_MEMRECALL = SDL_SCANCODE_KP_MEMRECALL,
		Key_KP_MEMCLEAR = SDL_SCANCODE_KP_MEMCLEAR,
		Key_KP_MEMADD = SDL_SCANCODE_KP_MEMADD,
		Key_KP_MEMSUBTRACT = SDL_SCANCODE_KP_MEMSUBTRACT,
		Key_KP_MEMMULTIPLY = SDL_SCANCODE_KP_MEMMULTIPLY,
		Key_KP_MEMDIVIDE = SDL_SCANCODE_KP_MEMDIVIDE,
		Key_KP_PLUSMINUS = SDL_SCANCODE_KP_PLUSMINUS,
		Key_KP_CLEAR = SDL_SCANCODE_KP_CLEAR,
		Key_KP_CLEARENTRY = SDL_SCANCODE_KP_CLEARENTRY,
		Key_KP_BINARY = SDL_SCANCODE_KP_BINARY,
		Key_KP_OCTAL = SDL_SCANCODE_KP_OCTAL,
		Key_KP_DECIMAL = SDL_SCANCODE_KP_DECIMAL,
		Key_KP_HEXADECIMAL = SDL_SCANCODE_KP_HEXADECIMAL,
		Key_LCTRL = SDL_SCANCODE_LCTRL,
		Key_LSHIFT = SDL_SCANCODE_LSHIFT,
		Key_LALT = SDL_SCANCODE_LALT,
		Key_LGUI = SDL_SCANCODE_LGUI,
		Key_RCTRL = SDL_SCANCODE_RCTRL,
		Key_RSHIFT = SDL_SCANCODE_RSHIFT,
		Key_RALT = SDL_SCANCODE_RALT,
		Key_RGUI = SDL_SCANCODE_RGUI,
		Key_MODE = SDL_SCANCODE_MODE,
		Key_AUDIONEXT = SDL_SCANCODE_AUDIONEXT,
		Key_AUDIOPREV = SDL_SCANCODE_AUDIOPREV,
		Key_AUDIOSTOP = SDL_SCANCODE_AUDIOSTOP,
		Key_AUDIOPLAY = SDL_SCANCODE_AUDIOPLAY,
		Key_AUDIOMUTE = SDL_SCANCODE_AUDIOMUTE,
		Key_MEDIASELECT = SDL_SCANCODE_MEDIASELECT,
		Key_WWW = SDL_SCANCODE_WWW,
		Key_MAIL = SDL_SCANCODE_MAIL,
		Key_CALCULATOR = SDL_SCANCODE_CALCULATOR,
		Key_COMPUTER = SDL_SCANCODE_COMPUTER,
		Key_AC_SEARCH = SDL_SCANCODE_AC_SEARCH,
		Key_AC_HOME = SDL_SCANCODE_AC_HOME,
		Key_AC_BACK = SDL_SCANCODE_AC_BACK,
		Key_AC_FORWARD = SDL_SCANCODE_AC_FORWARD,
		Key_AC_STOP = SDL_SCANCODE_AC_STOP,
		Key_AC_REFRESH = SDL_SCANCODE_AC_REFRESH,
		Key_AC_BOOKMARKS = SDL_SCANCODE_AC_BOOKMARKS,
		Key_BRIGHTNESSDOWN = SDL_SCANCODE_BRIGHTNESSDOWN,
		Key_BRIGHTNESSUP = SDL_SCANCODE_BRIGHTNESSUP,
		Key_DISPLAYSWITCH = SDL_SCANCODE_DISPLAYSWITCH,
		Key_KBDILLUMTOGGLE = SDL_SCANCODE_KBDILLUMTOGGLE,
		Key_KBDILLUMDOWN = SDL_SCANCODE_KBDILLUMDOWN,
		Key_KBDILLUMUP = SDL_SCANCODE_KBDILLUMUP,
		Key_EJECT = SDL_SCANCODE_EJECT,
		Key_SLEEP = SDL_SCANCODE_SLEEP,
		Key_APP1 = SDL_SCANCODE_APP1,
		Key_APP2 = SDL_SCANCODE_APP2,
		// Key_AUDIOREWIND = SDL_SCANCODE_AUDIOREWIND,
		// Key_AUDIOFASTFORWARD = SDL_SCANCODE_AUDIOFASTFORWARD,

		Key_SPECIAL_COUNT = SDL_NUM_SCANCODES, 

	};
}

//-----------------------------------------------------------------------------

#endif